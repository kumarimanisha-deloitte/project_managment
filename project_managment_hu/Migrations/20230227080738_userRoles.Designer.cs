// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project_managment_hu.DbContest;

#nullable disable

namespace project_managment_hu.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230227080738_userRoles")]
    partial class userRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("project_managment_hu.Model.IssueLabel", b =>
                {
                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.HasKey("IssueId", "LabelId");

                    b.HasIndex("LabelId");

                    b.ToTable("IssueLabels");
                });

            modelBuilder.Entity("project_managment_hu.Model.Issuses", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IssueTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IssueType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ReporterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("projectsProjectId")
                        .HasColumnType("int");

                    b.HasKey("IssueId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("ReporterId")
                        .IsUnique();

                    b.HasIndex("projectsProjectId");

                    b.ToTable("issuses");
                });

            modelBuilder.Entity("project_managment_hu.Model.labels", b =>
                {
                    b.Property<int>("labelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("labelId");

                    b.ToTable("labels");
                });

            modelBuilder.Entity("project_managment_hu.Model.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("project_createrId")
                        .HasColumnType("int");

                    b.Property<string>("project_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProjectId");

                    b.HasIndex("project_createrId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("project_managment_hu.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("project_managment_hu.Model.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("userModels");
                });

            modelBuilder.Entity("project_managment_hu.Model.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("project_managment_hu.Model.IssueLabel", b =>
                {
                    b.HasOne("project_managment_hu.Model.Issuses", "Issue")
                        .WithMany("IssueLabels")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_managment_hu.Model.labels", "Label")
                        .WithMany("IssueLabels")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("project_managment_hu.Model.Issuses", b =>
                {
                    b.HasOne("project_managment_hu.Model.UserModel", "Assignee")
                        .WithMany("Assignee")
                        .HasForeignKey("AssigneeId");

                    b.HasOne("project_managment_hu.Model.UserModel", "Reporter")
                        .WithOne("Reporter")
                        .HasForeignKey("project_managment_hu.Model.Issuses", "ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_managment_hu.Model.Projects", "projects")
                        .WithMany("issuses")
                        .HasForeignKey("projectsProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Reporter");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("project_managment_hu.Model.Projects", b =>
                {
                    b.HasOne("project_managment_hu.Model.UserModel", "project_creater")
                        .WithMany("projects")
                        .HasForeignKey("project_createrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project_creater");
                });

            modelBuilder.Entity("project_managment_hu.Model.UserRole", b =>
                {
                    b.HasOne("project_managment_hu.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_managment_hu.Model.UserModel", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("project_managment_hu.Model.Issuses", b =>
                {
                    b.Navigation("IssueLabels");
                });

            modelBuilder.Entity("project_managment_hu.Model.labels", b =>
                {
                    b.Navigation("IssueLabels");
                });

            modelBuilder.Entity("project_managment_hu.Model.Projects", b =>
                {
                    b.Navigation("issuses");
                });

            modelBuilder.Entity("project_managment_hu.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("project_managment_hu.Model.UserModel", b =>
                {
                    b.Navigation("Assignee");

                    b.Navigation("Reporter")
                        .IsRequired();

                    b.Navigation("UserRoles");

                    b.Navigation("projects");
                });
#pragma warning restore 612, 618
        }
    }
}
